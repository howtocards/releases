version: "3.7"

volumes:
  image-storage:
    driver: local
    driver_opts:
      type: none
      device: "${PWD}/preview-images"
      o: bind

networks:
  internal:
    driver: host

services:
  db:
    container_name: howtocards-database
    image: postgres:11.5
    restart: always
    volumes:
      - /usr/local/var/howtocards/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - "5432"

  public-api:
    container_name: howtocards-public-api
    image: howtocards/backend/public-api:latest
    restart: always
    expose:
      - "9000"
    links:
      - db
    depends_on:
      - db
    environment:
      - RUST_LOG=info
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_HOST=db
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}

  frontend:
    container_name: howtocards-frontend
    image: howtocards/frontend:latest
    expose:
      - "80"

  ssi:
    container_name: howtocards-ssi
    image: howtocards-ssi
    build:
      context: ./ssi
      dockerfile: Dockerfile
      args:
        FRONTEND_VERSION: latest
        SSI_VERSION: latest
    restart: always
    expose:
      - "4000"
    links:
      - public-api
    depends_on:
      - public-api
    environment:
      - RUST_LOG=info
      - PUBLIC_URL=https://howtocards.io
      - BACKEND_URL=http://public-api:9000
      - LISTEN_HOST=0.0.0.0:4000

  entry:
    container_name: howtocards-entry
    image: howtocards-entry
    build:
      context: ./entry
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    links:
      - ssi
      - frontend
      - public-api
    depends_on:
      - ssi
      - frontend
      - public-api
    volumes:
      - /usr/local/var/howtocards/tls/howtocards.crt:/var/lib/howtocards/tls/howtocards.crt
      - /usr/local/var/howtocards/tls/howtocards.pem:/var/lib/howtocards/tls/howtocards.pem
      - /usr/local/var/howtocards/tls/dhparam.pem:/etc/ssl/certs/dhparam.pem
      - image-storage:/images

  queue:
    container_name: howtocards-preview-queue
    image: howtocards/preview-queue/preview-queue
    restart: always
    entrypoint: /app/queue
    command:
      - "--rabbit.host=queue-rabbit"
    ports:
      - "8080:8080"
    links:
      - queue-rabbit
    depends_on:
      - queue-rabbit

  queue-rabbit:
    container_name: howtocards-queue-rabbit
    image: rabbitmq:3.7-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_NODENAME: preview@howtocards
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - /usr/local/var/howtocards/rabbit/queue:/var/lib/rabbitmq

  image-uploader:
    container_name: howtocards-image-uploader
    image: howtocards/image-uploader/image-uploader
    restart: always
    environment:
      VOLUME: /files
      LISTEN_PORT: "5005"
    ports:
      - "5005:5005"
    volumes:
      - image-storage:/files

  preview-worker-1:
    container_name: howtocards-preview-worker-1
    image: howtocards/preview-worker/preview-worker
    restart: always
    links:
      - queue-rabbit
      - image-uploader
    depends_on:
      - queue-rabbit
      - image-uploader
    environment:
      RABBIT_HOST: "amqp://queue-rabbit:5672"
      QUEUE_NAME: event
      UPLOADER_HOST: "http://image-uploader:4000"
      POOL_SIZE: "2"
