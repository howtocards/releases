version: "3.7"

volumes:
  image-storage:
    driver: local
    driver_opts:
      type: none
      device: "${PWD}/preview-images"
      o: bind

networks:
  entry:

services:
  database:
    container_name: howtocards-database
    image: postgres:11.5
    restart: always
    volumes:
      - /usr/local/var/howtocards/postgres:/var/lib/postgresql/data
    networks:
      - entry
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - "5432"
    ports:
      - 5432:5432

  public-api:
    container_name: howtocards-public-api
    image: howtocards/backend/public-api:latest
    restart: always
    expose:
      - "9000"
    depends_on:
      - database
    networks:
      - entry
    environment:
      RUST_LOG: info
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PREVIEW_QUEUE_URL: http://queue:8080
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_HOST: database
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database/${POSTGRES_DB}

  internal-api:
    container_name: howtocards-internal-api
    image: howtocards/backend/internal-api:latest
    restart: always
    expose:
      - "9002"
    ports:
      - 9002:9002
    depends_on:
      - database
    networks:
      - entry
    environment:
      RUST_LOG: info
      LISTEN: 0.0.0.0:9002
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_HOST: database
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database/${POSTGRES_DB}

  frontend:
    container_name: howtocards-frontend
    image: howtocards/frontend/frontend:latest
    networks:
      - entry
    expose:
      - "80"

  ssi:
    container_name: howtocards-ssi
    image: howtocards-ssi
    build:
      context: ./ssi
      dockerfile: Dockerfile
      args:
        FRONTEND_VERSION: latest
        SSI_VERSION: latest
    restart: always
    expose:
      - "4000"
    depends_on:
      - public-api
    networks:
      - entry
    environment:
      RUST_LOG: info
      PUBLIC_URL: https://howtocards.io
      IMAGE_URL: https://howtocards.io/images
      BACKEND_URL: http://public-api:9000
      LISTEN_HOST: 0.0.0.0:4000

  entry:
    container_name: howtocards-entry
    image: howtocards-entry
    build:
      context: ./entry
      dockerfile: Dockerfile
    restart: always
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "https://howtocards.io"]
    ports:
      - "80:80"
      - "443:443"
    networks:
      entry:
        aliases:
          - howtocards.io
    depends_on:
      - ssi
      - frontend
      - public-api
    volumes:
      - /usr/local/var/howtocards/tls/howtocards.crt:/var/lib/howtocards/tls/howtocards.crt
      - /usr/local/var/howtocards/tls/howtocards.pem:/var/lib/howtocards/tls/howtocards.pem
      - /usr/local/var/howtocards/tls/dhparam.pem:/etc/ssl/certs/dhparam.pem
      - image-storage:/images

  queue:
    container_name: howtocards-preview-queue
    image: howtocards/preview-queue/preview-queue
    restart: always
    entrypoint: /app/queue
    command:
      - "--rabbit.host=queue-rabbit"
      - "--rabbit.pass=guest"
      - "--rabbit.user=guest"
    ports:
      - "8080:8080"
    depends_on:
      - queue-rabbit
    networks:
      - entry

  queue-rabbit:
    container_name: howtocards-queue-rabbit
    image: rabbitmq:3.7-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - /usr/local/var/howtocards/rabbit/queue:/var/lib/rabbitmq
    networks:
      - entry

  image-uploader:
    container_name: howtocards-image-uploader
    image: howtocards/image-uploader/image-uploader
    restart: always
    environment:
      VOLUME: /files
      LISTEN_PORT: "5005"
    ports:
      - "5005:5005"
    volumes:
      - image-storage:/files
    networks:
      - entry

  preview-worker-1:
    container_name: howtocards-preview-worker-1
    image: howtocards/preview-worker/preview-worker:latest
    restart: always
    depends_on:
      - queue-rabbit
      - image-uploader
      - entry
      - internal-api
    networks:
      - entry
    environment:
      CALLBACK_HOST: "http://internal-api:9002"
      DEBUG: "worker"
      POOL_SIZE: "2"
      QUEUE_NAME: event
      RABBIT_HOST: "amqp://queue-rabbit:5672"
      RENDER_HOST: "https://howtocards.io"
      UPLOADER_HOST: "http://image-uploader:5005"
